diff --git a/node_modules/rn-screenshot-prevent/ios/ScreenshotPrevent.mm b/node_modules/rn-screenshot-prevent/ios/ScreenshotPrevent.mm
index 87eb485..68ac848 100644
--- a/node_modules/rn-screenshot-prevent/ios/ScreenshotPrevent.mm
+++ b/node_modules/rn-screenshot-prevent/ios/ScreenshotPrevent.mm
@@ -102,61 +102,46 @@ CGSize CGSizeAspectFill(const CGSize aspectRatio, const CGSize minimumSize)
     return aspectFillSize;
 }
 
-
 /**
- * creates secure text field inside rootView of the app
- * taken from https://stackoverflow.com/questions/18680028/prevent-screen-capture-in-an-ios-app
+ * Creates secure text field inside the UIApplication's `keyWindow`
  * 
- * converted to ObjC and modified to get it working with RCT
  */
--(void) addSecureTextFieldToView:(UIView *) view :(NSString *) imagePath {
-
-    UIView *rootView = [UIApplication sharedApplication].keyWindow.rootViewController.view;
-
-
-    // fixes safe-area
-    secureField = [[UITextField alloc] initWithFrame:rootView.frame];
-    secureField.secureTextEntry = TRUE;
-    secureField.userInteractionEnabled = FALSE;
+- (void) addSecureView {
+    if (@available(iOS 13.0, *)) {
+        if (secureField == nil) {
+            [self initTextField];
+        }
+        [secureField setSecureTextEntry: TRUE];
+        [secureField setBackgroundColor: UIColor.whiteColor];
+    }
+}
 
-    if (imagePath && ![imagePath isEqualToString:@""]) {
-        UIView * imgView = [[UIView alloc] initWithFrame:CGRectMake(0.f, 0.f, rootView.frame.size.width, rootView.frame.size.height)];
-        NSURL *url = [NSURL URLWithString:imagePath];
-        NSData *data = [NSData dataWithContentsOfURL:url];
-        UIImage *img = [[UIImage alloc] initWithData:data];
+- (void) initTextField {
+    CGRect screenRect = [[UIScreen mainScreen] bounds];
+    secureField = [[UITextField alloc] initWithFrame:CGRectMake(0, 0, screenRect.size.width, screenRect.size.height)];
+    secureField.translatesAutoresizingMaskIntoConstraints = NO;
         
-        CGSize sizeBeingScaledTo = CGSizeAspectFill(img.size, imgView.frame.size);
+    [secureField setTextAlignment:NSTextAlignmentCenter];
+    [secureField setUserInteractionEnabled: NO];
         
-        // redraw the image to fit the screen size
-        UIGraphicsBeginImageContextWithOptions(imgView.frame.size, NO, 0.f);
+    UIWindow *window = [UIApplication sharedApplication].keyWindow;
+    [window.layer.superlayer addSublayer: secureField.layer];
         
-        float offsetX = (imgView.frame.size.width - sizeBeingScaledTo.width) / 2;
-        float offsety = (imgView.frame.size.height - sizeBeingScaledTo.height) / 2;
+    if (secureField.layer.sublayers.firstObject) {
+        [secureField.layer.sublayers.firstObject addSublayer: window.layer];
+    }
+}
         
+- (void) removeSecureView {
+    if (secureField == nil) { return; }
         
-        [img drawInRect:CGRectMake(offsetX, offsety, sizeBeingScaledTo.width, sizeBeingScaledTo.height)];
-        UIImage * resultImage = UIGraphicsGetImageFromCurrentImageContext();
-        UIGraphicsEndImageContext();
+    UIWindow *window = [UIApplication sharedApplication].keyWindow;
         
-        secureField.backgroundColor = [UIColor colorWithPatternImage:resultImage];
-    }
+    [secureField setSecureTextEntry: FALSE];
 
-    [view sendSubviewToBack:secureField];
-    [view addSubview:secureField];
-    [view.layer.superlayer addSublayer:secureField.layer];
-    [[secureField.layer.sublayers lastObject] addSublayer:view.layer];
-}
-
-// TODO: not working now, fix crash on _UITextFieldCanvasView contenttViewInvalidated: unrecognized selector sent to instance
--(void) removeSecureTextFieldFromView:(UIView *) view {
-    for(UITextField *subview in view.subviews){
-        if([subview isMemberOfClass:[UITextField class]]) {
-            if(subview.secureTextEntry == TRUE) {
-                [subview removeFromSuperview];
-                subview.secureTextEntry = FALSE;
-                secureField.userInteractionEnabled = TRUE;
-            }
-        }
+    CALayer *textFieldLayer = secureField.layer.sublayers.firstObject;
+    if ([window.layer.superlayer.sublayers containsObject:textFieldLayer]) {
+        [textFieldLayer removeFromSuperlayer];
     }
 }
 
@@ -168,21 +153,12 @@ -(void) removeSecureTextFieldFromView:(UIView *) view {
 
 /** adds secure textfield view */
 RCT_EXPORT_METHOD(enableSecureView: (NSString *)imagePath) {
-    if(secureField.secureTextEntry == false) {
-        UIView *view = [UIApplication sharedApplication].keyWindow.rootViewController.view;
-        for(UIView *subview in view.subviews) {
-            [self addSecureTextFieldToView:subview :imagePath];
-        }
-    }
+    [self addSecureView];
 }
 
 /** removes secure textfield from the view */
 RCT_EXPORT_METHOD(disableSecureView) {
-    secureField.secureTextEntry = false;
-    UIView *view = [UIApplication sharedApplication].keyWindow.rootViewController.view;
-    for(UIView *subview in view.subviews) {
-        [self removeSecureTextFieldFromView:subview];
-    }
+    [self removeSecureView];
 }
 
 // Don't compile this code when we build for the old architecture.
